version: '3'

volumes:
  postgres_data: {}
  postgres_backup: {}
  nginx_data: {}
  nginx_confd: {}
  nginx_vhost: {}
  nginx_html: {}

services:
  postgres:
    restart: always
    build: ./compose/postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backup:/backups
    env_file: .env

  nginx:
    restart: always
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx_confd:/etc/nginx/conf.d
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - "./volumes/proxy/certs:/etc/nginx/certs:ro"
      - nginx_data:/app/public
    depends_on:
      - django
      - daphne

  nginx-gen:
    restart: always
    image: jwilder/docker-gen
    container_name: nginx-gen
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - nginx_confd:/etc/nginx/conf.d
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - "./volumes/proxy/certs:/etc/nginx/certs:ro"
      - "./volumes/proxy/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  letsencrypt-nginx-proxy-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - nginx_confd:/etc/nginx/conf.d
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - "./volumes/proxy/certs:/etc/nginx/certs:rw"
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
      - NGINX_PROXY_CONTAINER=nginx
      - DEBUG=true
    depends_on:
      - django

  django:
    restart: always
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - nginx_data:/app/public
      - nginx_confd:/etc/nginx/conf.d
    user: django
    depends_on:
      - postgres
      - redis
    command: /gunicorn.sh
    env_file: .env
    environment:
      - VIRTUAL_HOST=crm.sobsam.com
      - VIRTUAL_PORT=443
      - VIRTUAL_PROTO=https
      - LETSENCRYPT_HOST=crm.sobsam.com
      - LETSENCRYPT_EMAIL=pluton@freeday.com.ua
      - DEBUG=true

  daphne:
    restart: always
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    user: django
    depends_on:
      - postgres
      - redis
      - asgi_worker
    command: /daphne.sh
    env_file: .env

  asgi_worker:
    restart: always
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    user: django
    depends_on:
      - postgres
      - redis
    command: /asgi_worker.sh
    env_file: .env

  redis:
    image: redis:latest

  celeryworker:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    user: django
    env_file: .env
    depends_on:
     - postgres
     - redis
    command: celery -A edem worker -l INFO

  celerybeat:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    user: django
    env_file: .env
    depends_on:
      - postgres
      - redis
    command: celery -A edem beat -l INFO


networks:
  default:
    external:
      name: nginx-proxy