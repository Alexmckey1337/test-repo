image: docker:latest
services:
  - docker:dind

before_script:
    - docker login -u amirr -p $MCI_BUILD_TOKEN $MCI_REGISTRY

stages:
  - build
  - test
  - deploy

build-stage:
  stage: build
  script:
    - docker build -t reg.sobsam.com/vocrm:latest .
    - docker push reg.sobsam.com/vocrm:latest
  only:
    - master

build-prod:
  stage: build
  script:
    - docker build -t reg.sobsam.com/vocrm:$CI_COMMIT_TAG -t reg.sobsam.com/vocrm:stable .
    - docker push reg.sobsam.com/vocrm:$CI_COMMIT_TAG
    - docker push reg.sobsam.com/vocrm:stable
  only:
    - tags

deploy-stage:
  stage: deploy
  image: python:3.6
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh $STAGE_USER@$STAGE_HOST "VOCRM_TAG=latest /home/vocrm/sites/vocrm/update_dev.sh"
  only:
    - master

deploy-prod:
  stage: test
  image: python:3.6
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh $DB_USER@$DB_HOST "/home/db/backup.sh"
    - ssh $PROD_USER@$PROD_HOST "VOCRM_TAG=$CI_COMMIT_TAG /home/vocrm/sites/vocrm/update.sh"
  only:
    - tags
  when: manual
